<?xml version="1.0" encoding="utf-8" ?> 
<!--
Last updated: 1.0.0.2
This file adds sql detection information specific to the MSAccess database.
It is automatically used when PeterBlum.VAM.Security.Globals.UseConfigFiles(DatabaseType.MSAccess)

-->
<injection>


<!--
The illegalsqlelements section populates the global property:
PeterBlum.VAM.Security.Globals.IllegalSQLElements.

A list of terms that are never permitted in any input. This can be SQL keywords, SQL patterns, 
table names and column names. This list is used with all SQL Detection Levels.
For example, if this list contains the string "shutdown", no text will ever be permitted to contain the text "shutdown".
Suggestion: Use only phrases that would not normally appear in human language. 
For example, the prefined list looks for "set @[any variable name]". That is unique to the SQL language.
If you have very unique table and column names, you can add them here to guarantee that the hacker cannot ever enter them.
If you have table and column names that are likely to appear in human language, 
enter them into <databaseelementnames>.

VISE performs a case insensitive match. If you enter multiple words, separate them with spaces. 
VISE will replace the spaces with matching rules to a variety of ways to separate words 
including multiple spaces, new lines, and SQL comment phrases.

The tag format is:
<item action="add|remove|none" regex="true|false">value</item>
* The value must be supplied. It supports regular expressions.
These attributes are optional:
* action= one of these values: "add", "remove", "none". If not specified, "add" is used.
  "add" - adds the value to the list. (It will not create duplicates in the list.)
  "remove" - removes the value from the list. Items are added in order specified in the config files.
     Use this to remove an item with the same value previously added to the list.
     Its the preferred approach over deleting the original item.
     This option is usually used in custom.config and updates to config files to
     avoid changing the original file.
  "none" - prevents the item from being used in any way. Just like commenting it out.
* regex=  - When "true", it indicate that the tagname is a regular expression.
  When regex is not supplied, it defaults to regex="false".
  If you use a regular expression that contains special XML characters, consider enclosing it in <![CDATA[tagname]]>
-->
<illegalsqlelements>
<item action="add" regex="false">MSysACEs</item>
<item action="add" regex="false">MSysObjects</item>
<item action="add" regex="false">MSysQueries</item>
<item action="add" regex="false">MSysRelationships</item>
</illegalsqlelements>
</injection>