// This is an example of a SASS file because writing CSS manually these days is such a drag.  Hipsters Unite!
// Button Variables
//
$include-html-button-classes: $include-html-classes !default;

// We use these to build padding for buttons.
$button-med: em-calc(12) !default;
$button-tny: em-calc(7) !default;
$button-sml: em-calc(9) !default;
$button-lrg: em-calc(16) !default;

// We use this to control the display property.
$button-display: inline-block !default;
$button-margin-bottom: em-calc(20) !default;

// We use these to control button text styles.
$button-font-family: 'Raleway', Helvetica, Arial, sans-serif !default;
$button-font-color: #fff !default;
$button-font-color-alt: #333 !default;
$button-font-med: em-calc(16) !default;
$button-font-tny: em-calc(11) !default;
$button-font-sml: em-calc(13) !default;
$button-font-lrg: em-calc(20) !default;
$button-font-weight: normal !default;
$button-font-align: center !default;

// We use these to control various hover effects.
$button-function-factor: 10% !default;

// We use these to control button border styles.
$button-border-width: 1px !default;
$button-border-style: solid !default;

// We use this to set the default radius used throughout the core.
$button-radius: $global-radius !default;
$button-round: $global-rounded !default;

// We use this to set default opacity for disabled buttons.
$button-disabled-opacity: 0.6 !default;


//
// Button Mixins
//

// We use this mixin to create a default button base.
@mixin button-base($style:true, $display:$button-display) {
  @if $style {
    border-style: $button-border-style;
    border-width: $button-border-width;
    cursor: $cursor-pointer-value;
    font-family: $button-font-family;
    font-weight: $button-font-weight;
    line-height: normal;
    margin: 0 0 $button-margin-bottom;
    position: relative;
    text-decoration: none;
    text-align: $button-font-align;
  }
  @if $display { display: $display; }
}

// We use this mixin to add button size styles
@mixin button-size($padding:$button-med, $full-width:false, $is-input:false) {

  // We control which padding styles come through,
  // these can be turned off by setting $padding:false
  @if $padding {
    padding-top: $padding;
    padding-#{$opposite-direction}: $padding * 2;
    padding-bottom: $padding + em-calc(1);
    padding-#{$default-float}: $padding * 2;

    // We control the font-size based on mixin input.
    @if      $padding == $button-med { font-size: $button-font-med; }
    @else if $padding == $button-tny { font-size: $button-font-tny; }
    @else if $padding == $button-sml { font-size: $button-font-sml; }
    @else if $padding == $button-lrg { font-size: $button-font-lrg; }
    @else                            { font-size: $padding - em-calc(2); }
  }

  // We can set $full-width:true to remove side padding extend width.
  @if $full-width {
    // We still need to check if $padding is set.
    @if $padding {
    padding-top: $padding;
    padding-bottom: $padding + em-calc(1);
    } @else if $padding == false {
      padding-top:0;
      padding-bottom:0;
    }
    padding-right: 0;
    padding-left: 0;
    width: 100%;
  }